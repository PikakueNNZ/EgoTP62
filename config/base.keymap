/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// Define layer numbers
#define BASE 0
#define BASE_QWERTY 1
#define NAV_WORD 2
#define NUM_WORD 3
#define SYM_WORD 4
#define NAV 5
#define NUM 6
#define SYM 7
#define FUNC 8
#define ADJUST 9
#define LOWER 10
#define MOUSE_KEYS 11
#define MOUSE_TP 12
#define MOUSE_SET 13


// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>


// Personal includes
#ifdef HAS_MOUSE_KEYS
     #include "includes/mouse_keys.dtsi"
#endif

#ifdef HAS_MOUSE_TP
     #include "includes/mouse_tp.dtsi"
#endif

#include "includes/custom_keycodes.dtsi"
#include "includes/settings.dtsi"
//#include "includes/settings_pd.dtsi"
#include "includes/conditional_layers.dtsi"
#include "includes/macros.dtsi"
#include "includes/combos.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"
#include "includes/behaviours_mod_morph.dtsi"
#include "includes/behaviours_other.dtsi"


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL     &kp N1         &kp N2         &kp N3          &kp N4      &kp N5                            &kp N6     &kp N7     &kp N8     &kp N9        &kp N0         &kp MINUS
&kp TAB       &kp Q          &kp W          &kp E           &kp R       &kp T                             &kp Y      &kp U      &kp I      &kp O         &kp P          &kp BACKSLASH
&kp CAPSLOCK  &kp A          &kp S          &kp D           &kp F       &kp G                             &kp H      &kp J      &kp K      &kp L         &kp SEMICOLON  &kp SQT
&kp LSHFT     &kp Z          &kp X          &kp C           &kp V       &kp B                             &kp N      &kp M      &kp COMMA  &kp DOT       &kp FSLH       &kp RSHIFT
                             &kp GRAVE      &kp BACKSLASH                                                                       &kp LBKT   &kp RBKT
                                                            &kp LCTRL   &mkp LCLK   &kp ALT          &mkp RCLK  &mkp MCLK  &kp SPACE 
                                                                        &mo 1       &kp LGUI         &kp ENTER  &kp BACKSPACE
                                            
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>; 
        };


        layer_1 {
            bindings = <
&kp ESC  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                            &kp F6    &kp F7    &kp F8    &kp F9     &kp F10  &kp F11
&none    &none   &none   &none   &none   &none                             &none     &none     &kp UP    &none      &none    &kp F12
&none    &none   &none   &none   &none   &none                             &none     &kp LEFT  &kp DOWN  &kp RIGHT  &none    &none
&none    &none   &none   &none   &none   &none                             &none     &none     &none     &none      &none    &none
                 &none   &none                                                                 &none     &none
                                 &none   &none   &none           &none     &none     &none    
                                         &mo 2   &none           &none     &mo 2 
            >;
        };

        layer_2 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                     &none  &none  &none       &none     &none       &none
&none       &none         &none         &none         &none         &none                                            &none  &none  &none       &none     &none       &none
&none       &none         &none         &none         &none         &none                                            &none  &none  &none       &none     &none       &none
&none       &none         &none         &none         &none         &none                                            &none  &none  &none       &none     &none       &none
                          &none         &none                                                                                      &bt BT_PRV  &bt BT_NXT
                                                      &none         &none         &none                       &none  &none  &none  
                                                                    &none         &none                       &none  &none 
            >;
        };
    };
};

